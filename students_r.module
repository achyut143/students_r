<?php

/**
 * @file
 * This module holds functions useful for Drupal development.
 *
 * Please contribute!
 */

/**
 * Implements hook_permission().
 */
function students_r_permission() {
  return array(
    "submit student form" => array(
      'title' => 'submit student form',
      'description' => 'This form adds student details to the database',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function students_r_menu() {
  $items = array();
  $items['student_form'] = array(
    'title' => 'student marks submission form',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('submit student form'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('student_eform'),
  );

  $items['display'] = array(
    'title' => 'marks record',
    'description' => 'these are the marks of students',
    'access arguments' => array('submit student form'),
    'page callback' => 'student_display',
  );

  $items['delete/%'] = array(
    'title' => 'delete record',
    'access arguments' => array('submit student form'),
    'page callback' => 'delete_record',
    'page arguments' => array(1),
  );

  $items['edit/%'] = array(
    'title' => 'update record',
    'access arguments' => array('submit students form'),
    'page callback' => 'edit_record',
    'page arguments' => array(1),
  );

  return $items;

}

/**
 * Deletes student record when clicked on delete button.
 */
function delete_record($id) {
  db_delete('students_r')
    ->condition('student_id', $id)
    ->execute();
  drupal_set_message('student marks record deleted');
  drupal_goto('display');
}

/**
 * Edits student record when clicked on update button.
 */
function edit_record($id) {
  $path = "";
  $path .= l(t('return to list'), 'display');
  return $path .= drupal_render(drupal_get_form('edit_student_marks'));
}

/**
 * Edit form to update students record.
 */
function edit_student_marks($form, &$form_state) {
  $query = db_select('students_r', 'sr')
    ->fields('sr')
    ->condition('student_id', arg(1), '=');

  $query = $query->execute()->fetchAssoc();

  $form = array();

  $form['student_name'] = array(
    '#type' => 'textfield',
    '#title' => 'student name',
    '#size' => 20,
    '#maxlength' => 20,
    '#required' => TRUE,
    '#value' => $query['student_name'],
    '#description' => 'update students name',
  );

  $form['marks'] = array(
    '#type' => 'textfield',
    '#title' => 'student marks',
    '#size' => 4,
    '#maxlength' => 4,
    '#required' => TRUE,
    '#value' => $query['marks'],
    '#description' => 'update student marks',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('update Marks'),
  );

  return $form;
}

/**
 * Submit function for update record form.
 */
function edit_student_marks_submit($form, &$form_state) {

  db_update('students_r')
    ->fields(array('student_name' => $form_state['input']['student_name'], 'marks' => $form_state['input']['marks']))
    ->condition('student_id', arg(1), '=')
    ->execute();
  drupal_set_message('record has been updated');
  drupal_goto('display');
}

/**
 * Add record form.
 */
function student_eform($form, &$form_state) {
  $form['student_name'] = array(
    '#type' => 'textfield',
    '#title' => 'student name',
    '#size' => 20,
    '#maxlength' => 20,
    '#required' => TRUE,
    '#description' => 'Enter students name',
  );

  $form['marks'] = array(
    '#type' => 'textfield',
    '#title' => 'student marks',
    '#size' => 4,
    '#maxlength' => 4,
    '#required' => TRUE,
    '#description' => 'Enter student marks',
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('ADD Marks'),
  );

  return $form;
}

/**
 * Validate function of student add record form.
 */
function student_eform_validate($form, &$form_state) {
  if (!is_numeric($form_state['values']['marks'])) {
    form_set_error('student_marks', t('please insert number'));
    return FALSE;
  }
  return TRUE;
}

/**
 * Submit function of student add record form.
 */
function student_eform_submit($form, &$form_state) {
  $student_id = db_insert('students_r')
    ->fields(array(
      'student_name' => $form_state['values']['student_name'],
      'marks' => $form_state['values']['marks'],
    ))
    ->execute();
  drupal_set_message(t('student marks has been added'));
}

/**
 * Display students record.
 */
function student_display() {
  $query = db_select('students_r', 'sr')
    ->fields('sr', array('student_id', 'student_name', 'marks'))
    ->range(0, 30)
    ->orderBy('sr.student_id');
  $results = $query->execute();
  $header = array(t('ID'), t('Name'), t('Marks'), t('Options'), t('Update'));
  $rows = array();
  foreach ($results as $result) {
    $rows[] = array(
      check_plain($result->student_id),
      check_plain($result->student_name),
      check_plain($result->marks),
      l(t('DELETE'), 'delete/' . $result->student_id),
      l(t('UPDATE'), 'edit/' . $result->student_id),
    );
  }
  $path = theme('table', array('header' => $header, 'rows' => $rows));
  return $path;
}
